{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using and creating Python packages\n",
    "\n",
    "This tutorial will show how to use Python packages from Nixpkgs and create new ones. For reference material on Python in Nixpkgs, see the [Python section in the Nixpkgs manual](https://nixos.org/nixpkgs/manual#python)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Python interpreters\n",
    "\n",
    "Nixpkgs contains recipes for various Python interpreters. Multiple versions are available of the official reference implementation also known as CPython. Interpreters can be installed into a profile, used as part of a build or used temporary in a `nix-shell` or `nix run` session. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Python applications, libraries and environments\n",
    "\n",
    "In Nixpkgs a distinction is made between applications, libraries and environments. \n",
    "- Applications are programs for end-users such as Calibre the e-book manager. \n",
    "- Libraries are packages providing importable modules. Additionally, tools used for development of libraries are also considered libraries.\n",
    "- Environments are a Python interpreter along with libraries, typically used for development or as dependency for other programs.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Python application\n",
    "\n",
    "Let's consider first a Python application, the version control system Mercurial. The following recipe shows how to build it. For build and run-time dependencies we use the recipes provided by Nixpkgs. We then create a builder function for building our package. Finally, we call it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%file default.nix\n",
    "\n",
    "let\n",
    "  nixpkgs = fetchTarball \"channel:nixos-20.03\";\n",
    "  pkgs = import nixpkgs {};\n",
    "\n",
    "  recipe = { python3, fetchurl }: \n",
    "    with python3.pkgs;\n",
    "        \n",
    "    buildPythonApplication rec {\n",
    "      pname = \"mercurial\";\n",
    "      version = \"5.2.2\";\n",
    "\n",
    "      src = fetchurl {\n",
    "        url = \"https://mercurial-scm.org/release/mercurial-${version}.tar.gz\";\n",
    "        sha256 = \"0fy00q0k4f0q64jjlnb7cl6m0sglivq9jgdddsp5sywc913zzigz\";\n",
    "      };\n",
    "    \n",
    "      # By default tests are executed, but they need to be invoked differently for this package\n",
    "      dontUseSetuptoolsCheck = true;\n",
    "    };\n",
    "\n",
    "in pkgs.callPackage recipe {}\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's build it. Note we suppress the build-output because of the amount."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "! nix-build --no-build-output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now execute `hg` directly from the store path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "! result/bin/hg --version"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "or install it in our profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "! nix-env -if ."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "bringing the executable onto `$PATH`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "! hg --version"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Creating a basic recipe for Mercurial was easy. The recipe used in Nixpkgs is however more elaborate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[K[\u001b[32;1m6\u001b[0m copied (\u001b[32;1m3.6\u001b[0m MiB), \u001b[32;1m1.1\u001b[0m MiB DL]\n",
      "{ \u001b[31mstdenv\u001b[39;49;00m, \u001b[31mfetchurl\u001b[39;49;00m, \u001b[31mpython3Packages\u001b[39;49;00m, \u001b[31mmakeWrapper\u001b[39;49;00m, \u001b[31munzip\u001b[39;49;00m\n",
      ", \u001b[31mguiSupport\u001b[39;49;00m ? \u001b[31mfalse\u001b[39;49;00m, \u001b[31mtk\u001b[39;49;00m ? \u001b[31mnull\u001b[39;49;00m\n",
      ", \u001b[31mApplicationServices\u001b[39;49;00m\n",
      "}:\n",
      "\n",
      "\u001b[31mlet\u001b[39;49;00m\n",
      "  \u001b[31minherit\u001b[39;49;00m \u001b[33m(\u001b[39;49;00m\u001b[31mpython3Packages\u001b[39;49;00m\u001b[33m)\u001b[39;49;00m \u001b[31mdocutils\u001b[39;49;00m \u001b[31mdulwich\u001b[39;49;00m \u001b[31mpython\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "\u001b[31min\u001b[39;49;00m \u001b[31mpython3Packages\u001b[39;49;00m.\u001b[31mbuildPythonApplication\u001b[39;49;00m \u001b[31mrec\u001b[39;49;00m {\n",
      "  \u001b[31mpname\u001b[39;49;00m = \u001b[33m\"\u001b[39;49;00m\u001b[33mm\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33mu\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "  \u001b[31mversion\u001b[39;49;00m = \u001b[33m\"\u001b[39;49;00m\u001b[33m5\u001b[39;49;00m\u001b[33m.\u001b[39;49;00m\u001b[33m2\u001b[39;49;00m\u001b[33m.\u001b[39;49;00m\u001b[33m2\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31msrc\u001b[39;49;00m = \u001b[31mfetchurl\u001b[39;49;00m {\n",
      "    \u001b[31murl\u001b[39;49;00m = \u001b[33m\"\u001b[39;49;00m\u001b[33mh\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mp\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33m:\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33mm\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33mu\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33m-\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33mm\u001b[39;49;00m\u001b[33m.\u001b[39;49;00m\u001b[33mo\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33mm\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33mu\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33m-\u001b[39;49;00m\u001b[33m$\u001b[39;49;00m\u001b[33m{\u001b[39;49;00m\u001b[33mv\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mo\u001b[39;49;00m\u001b[33mn\u001b[39;49;00m\u001b[33m}\u001b[39;49;00m\u001b[33m.\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33m.\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33mz\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31msha256\u001b[39;49;00m = \u001b[33m\"\u001b[39;49;00m\u001b[33m0\u001b[39;49;00m\u001b[33mf\u001b[39;49;00m\u001b[33my\u001b[39;49;00m\u001b[33m0\u001b[39;49;00m\u001b[33m0\u001b[39;49;00m\u001b[33mq\u001b[39;49;00m\u001b[33m0\u001b[39;49;00m\u001b[33mk\u001b[39;49;00m\u001b[33m4\u001b[39;49;00m\u001b[33mf\u001b[39;49;00m\u001b[33m0\u001b[39;49;00m\u001b[33mq\u001b[39;49;00m\u001b[33m6\u001b[39;49;00m\u001b[33m4\u001b[39;49;00m\u001b[33mj\u001b[39;49;00m\u001b[33mj\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33mn\u001b[39;49;00m\u001b[33mb\u001b[39;49;00m\u001b[33m7\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33m6\u001b[39;49;00m\u001b[33mm\u001b[39;49;00m\u001b[33m0\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mv\u001b[39;49;00m\u001b[33mq\u001b[39;49;00m\u001b[33m9\u001b[39;49;00m\u001b[33mj\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33md\u001b[39;49;00m\u001b[33md\u001b[39;49;00m\u001b[33md\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mp\u001b[39;49;00m\u001b[33m5\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33my\u001b[39;49;00m\u001b[33mw\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33m9\u001b[39;49;00m\u001b[33m1\u001b[39;49;00m\u001b[33m3\u001b[39;49;00m\u001b[33mz\u001b[39;49;00m\u001b[33mz\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33mz\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "  }\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31mformat\u001b[39;49;00m = \u001b[33m\"\u001b[39;49;00m\u001b[33mo\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mh\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31minherit\u001b[39;49;00m \u001b[31mpython\u001b[39;49;00m\u001b[37m; # pass it so that the same version can be used in hg2git\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31mbuildInputs\u001b[39;49;00m = [ \u001b[31mmakeWrapper\u001b[39;49;00m \u001b[31mdocutils\u001b[39;49;00m \u001b[31munzip\u001b[39;49;00m ]\n",
      "    ++ \u001b[31mstdenv\u001b[39;49;00m.\u001b[31mlib\u001b[39;49;00m.\u001b[31moptionals\u001b[39;49;00m \u001b[31mstdenv\u001b[39;49;00m.\u001b[31misDarwin\u001b[39;49;00m [ \u001b[31mApplicationServices\u001b[39;49;00m ]\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31mpropagatedBuildInputs\u001b[39;49;00m = [ \u001b[31mdulwich\u001b[39;49;00m ]\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31mmakeFlags\u001b[39;49;00m = [ \u001b[33m\"\u001b[39;49;00m\u001b[33mP\u001b[39;49;00m\u001b[33mR\u001b[39;49;00m\u001b[33mE\u001b[39;49;00m\u001b[33mF\u001b[39;49;00m\u001b[33mI\u001b[39;49;00m\u001b[33mX\u001b[39;49;00m\u001b[33m=\u001b[39;49;00m\u001b[33m$\u001b[39;49;00m\u001b[33m(\u001b[39;49;00m\u001b[33mo\u001b[39;49;00m\u001b[33mu\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33m)\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m ]\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31mpostInstall\u001b[39;49;00m = \u001b[33m(\u001b[39;49;00m\u001b[31mstdenv\u001b[39;49;00m.\u001b[31mlib\u001b[39;49;00m.\u001b[31moptionalString\u001b[39;49;00m \u001b[31mguiSupport\u001b[39;49;00m \u001b[33m'\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\n",
      "    \u001b[31mmkdir\u001b[39;49;00m -\u001b[31mp\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31metc\u001b[39;49;00m/\u001b[31mmercurial\u001b[39;49;00m\n",
      "    \u001b[31mcp\u001b[39;49;00m \u001b[31mcontrib\u001b[39;49;00m/\u001b[31mhgk\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mbin\u001b[39;49;00m\n",
      "    \u001b[31mcat\u001b[39;49;00m >> $\u001b[31mout\u001b[39;49;00m/\u001b[31metc\u001b[39;49;00m/\u001b[31mmercurial\u001b[39;49;00m/\u001b[31mhgrc\u001b[39;49;00m << \u001b[31mEOF\u001b[39;49;00m\n",
      "    [\u001b[31mextensions\u001b[39;49;00m]\n",
      "    \u001b[31mhgk\u001b[39;49;00m=$\u001b[31mout\u001b[39;49;00m/\u001b[31mlib\u001b[39;49;00m/${\u001b[31mpython\u001b[39;49;00m.\u001b[31mlibPrefix\u001b[39;49;00m}/\u001b[31msite\u001b[39;49;00m-\u001b[31mpackages\u001b[39;49;00m/\u001b[31mhgext\u001b[39;49;00m/\u001b[31mhgk\u001b[39;49;00m.\u001b[31mpy\u001b[39;49;00m\n",
      "    \u001b[31mEOF\u001b[39;49;00m\n",
      "    # \u001b[31msetting\u001b[39;49;00m \u001b[31mHG\u001b[39;49;00m \u001b[31mso\u001b[39;49;00m \u001b[31mthat\u001b[39;49;00m \u001b[31mhgk\u001b[39;49;00m \u001b[31mcan\u001b[39;49;00m \u001b[31mbe\u001b[39;49;00m \u001b[31mrun\u001b[39;49;00m \u001b[31mitself\u001b[39;49;00m \u001b[31mas\u001b[39;49;00m \u001b[31mwell\u001b[39;49;00m \u001b[33m(\u001b[39;49;00m\u001b[31mnot\u001b[39;49;00m \u001b[31monly\u001b[39;49;00m \u001b[31mhg\u001b[39;49;00m \u001b[31mview\u001b[39;49;00m\u001b[33m)\u001b[39;49;00m\n",
      "    \u001b[31mWRAP_TK\u001b[39;49;00m=\u001b[33m\"\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33m-\u001b[39;49;00m\u001b[33m-\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33mT\u001b[39;49;00m\u001b[33mK\u001b[39;49;00m\u001b[33m_\u001b[39;49;00m\u001b[33mL\u001b[39;49;00m\u001b[33mI\u001b[39;49;00m\u001b[33mB\u001b[39;49;00m\u001b[33mR\u001b[39;49;00m\u001b[33mA\u001b[39;49;00m\u001b[33mR\u001b[39;49;00m\u001b[33mY\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33m$\u001b[39;49;00m\u001b[33m{\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mk\u001b[39;49;00m\u001b[33m}\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mb\u001b[39;49;00m\u001b[33m/\u001b[39;49;00m\u001b[33m$\u001b[39;49;00m\u001b[33m{\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mk\u001b[39;49;00m\u001b[33m.\u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mb\u001b[39;49;00m\u001b[33mP\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mf\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mx\u001b[39;49;00m\u001b[33m}\u001b[39;49;00m\n",
      "              --\u001b[31mset\u001b[39;49;00m \u001b[31mHG\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mbin\u001b[39;49;00m/\u001b[31mhg\u001b[39;49;00m\n",
      "              --\u001b[31mprefix\u001b[39;49;00m \u001b[31mPATH\u001b[39;49;00m : ${\u001b[31mtk\u001b[39;49;00m}/\u001b[31mbin\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\n",
      "  \u001b[33m'\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33m)\u001b[39;49;00m + \u001b[33m'\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\n",
      "    \u001b[34mfor\u001b[39;49;00m \u001b[31mi\u001b[39;49;00m \u001b[31min\u001b[39;49;00m $\u001b[33m(\u001b[39;49;00m\u001b[31mcd\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mbin\u001b[39;49;00m && \u001b[31mls\u001b[39;49;00m\u001b[33m)\u001b[39;49;00m\u001b[37m; do\u001b[39;49;00m\n",
      "      \u001b[31mwrapProgram\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mbin\u001b[39;49;00m/$\u001b[31mi\u001b[39;49;00m \\\n",
      "        $\u001b[31mWRAP_TK\u001b[39;49;00m\n",
      "    \u001b[31mdone\u001b[39;49;00m\n",
      "\n",
      "    # \u001b[31mcopy\u001b[39;49;00m \u001b[31mhgweb\u001b[39;49;00m.\u001b[31mcgi\u001b[39;49;00m \u001b[31mto\u001b[39;49;00m \u001b[31mallow\u001b[39;49;00m \u001b[31muse\u001b[39;49;00m \u001b[31min\u001b[39;49;00m \u001b[31mapache\u001b[39;49;00m\n",
      "    \u001b[31mmkdir\u001b[39;49;00m -\u001b[31mp\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mshare\u001b[39;49;00m/\u001b[31mcgi\u001b[39;49;00m-\u001b[31mbin\u001b[39;49;00m\n",
      "    \u001b[31mcp\u001b[39;49;00m -\u001b[31mv\u001b[39;49;00m \u001b[31mhgweb\u001b[39;49;00m.\u001b[31mcgi\u001b[39;49;00m \u001b[31mcontrib\u001b[39;49;00m/\u001b[31mhgweb\u001b[39;49;00m.\u001b[31mwsgi\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mshare\u001b[39;49;00m/\u001b[31mcgi\u001b[39;49;00m-\u001b[31mbin\u001b[39;49;00m\n",
      "    \u001b[31mchmod\u001b[39;49;00m \u001b[31mu\u001b[39;49;00m+\u001b[31mx\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mshare\u001b[39;49;00m/\u001b[31mcgi\u001b[39;49;00m-\u001b[31mbin\u001b[39;49;00m/\u001b[31mhgweb\u001b[39;49;00m.\u001b[31mcgi\u001b[39;49;00m\n",
      "\n",
      "    # \u001b[31minstall\u001b[39;49;00m \u001b[31mbash\u001b[39;49;00m/\u001b[31mzsh\u001b[39;49;00m \u001b[31mcompletions\u001b[39;49;00m\n",
      "    \u001b[31minstall\u001b[39;49;00m -\u001b[31mv\u001b[39;49;00m -\u001b[31mm644\u001b[39;49;00m -\u001b[31mD\u001b[39;49;00m \u001b[31mcontrib\u001b[39;49;00m/\u001b[31mbash_completion\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mshare\u001b[39;49;00m/\u001b[31mbash\u001b[39;49;00m-\u001b[31mcompletion\u001b[39;49;00m/\u001b[31mcompletions\u001b[39;49;00m/\u001b[31m_hg\u001b[39;49;00m\n",
      "    \u001b[31minstall\u001b[39;49;00m -\u001b[31mv\u001b[39;49;00m -\u001b[31mm644\u001b[39;49;00m -\u001b[31mD\u001b[39;49;00m \u001b[31mcontrib\u001b[39;49;00m/\u001b[31mzsh_completion\u001b[39;49;00m $\u001b[31mout\u001b[39;49;00m/\u001b[31mshare\u001b[39;49;00m/\u001b[31mzsh\u001b[39;49;00m/\u001b[31msite\u001b[39;49;00m-\u001b[31mfunctions\u001b[39;49;00m/\u001b[31m_hg\u001b[39;49;00m\n",
      "  \u001b[33m'\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "\n",
      "  \u001b[31mmeta\u001b[39;49;00m = {\n",
      "    \u001b[31minherit\u001b[39;49;00m \u001b[31mversion\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mdescription\u001b[39;49;00m = \u001b[33m\"\u001b[39;49;00m\u001b[33mA\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33mf\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33m,\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33mh\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mw\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33mh\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33mS\u001b[39;49;00m\u001b[33mC\u001b[39;49;00m\u001b[33mM\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33my\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mm\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33mf\u001b[39;49;00m\u001b[33mo\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33mv\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33my\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33ml\u001b[39;49;00m\u001b[33ma\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mg\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33md\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mi\u001b[39;49;00m\u001b[33mb\u001b[39;49;00m\u001b[33mu\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33md\u001b[39;49;00m\u001b[33m \u001b[39;49;00m\u001b[33mp\u001b[39;49;00m\u001b[33mr\u001b[39;49;00m\u001b[33mo\u001b[39;49;00m\u001b[33mj\u001b[39;49;00m\u001b[33me\u001b[39;49;00m\u001b[33mc\u001b[39;49;00m\u001b[33mt\u001b[39;49;00m\u001b[33ms\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mhomepage\u001b[39;49;00m = \u001b[31mhttps\u001b[39;49;00m://\u001b[31mwww\u001b[39;49;00m.\u001b[31mmercurial\u001b[39;49;00m-\u001b[31mscm\u001b[39;49;00m.\u001b[31morg\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mdownloadPage\u001b[39;49;00m = \u001b[31mhttps\u001b[39;49;00m://\u001b[31mwww\u001b[39;49;00m.\u001b[31mmercurial\u001b[39;49;00m-\u001b[31mscm\u001b[39;49;00m.\u001b[31morg\u001b[39;49;00m/\u001b[31mrelease\u001b[39;49;00m/\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mlicense\u001b[39;49;00m = \u001b[31mstdenv\u001b[39;49;00m.\u001b[31mlib\u001b[39;49;00m.\u001b[31mlicenses\u001b[39;49;00m.\u001b[31mgpl2\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mmaintainers\u001b[39;49;00m = [ \u001b[31mstdenv\u001b[39;49;00m.\u001b[31mlib\u001b[39;49;00m.\u001b[31mmaintainers\u001b[39;49;00m.\u001b[31meelco\u001b[39;49;00m ]\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mupdateWalker\u001b[39;49;00m = \u001b[31mtrue\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "    \u001b[31mplatforms\u001b[39;49;00m = \u001b[31mstdenv\u001b[39;49;00m.\u001b[31mlib\u001b[39;49;00m.\u001b[31mplatforms\u001b[39;49;00m.\u001b[31munix\u001b[39;49;00m\u001b[37m;\u001b[39;49;00m\n",
      "  }\u001b[37m;\u001b[39;49;00m\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "! nix run -f channel:nixos-20.03 curl --command curl --silent https://raw.githubusercontent.com/NixOS/nixpkgs/nixos-20.03/pkgs/applications/version-management/mercurial/default.nix | pygmentize"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Python library\n",
    "\n",
    "Python uses packages to distribute libraries called modules that are importable. In Nixpkgs all Python 3 libraries are in the attribute set `python3.pkgs`. The following example shows a recipe for the Python package `toolz`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting toolz.nix\n"
     ]
    }
   ],
   "source": [
    "%%file toolz.nix\n",
    "\n",
    "{ lib, buildPythonPackage, fetchPypi }:\n",
    "\n",
    "buildPythonPackage rec {\n",
    "  pname = \"toolz\";\n",
    "  version = \"0.10.0\";\n",
    "\n",
    "  src = fetchPypi {\n",
    "    inherit pname version;\n",
    "    sha256 = \"08fdd5ef7c96480ad11c12d472de21acd32359996f69a5259299b540feba4560\";\n",
    "  };\n",
    "\n",
    "  doCheck = false;\n",
    "\n",
    "  meta = with lib; {\n",
    "    homepage = https://github.com/pytoolz/toolz;\n",
    "    description = \"List processing tools and functional utilities\";\n",
    "    license = licenses.bsd3;\n",
    "    maintainers = with maintainers; [ fridh ];\n",
    "  };\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Applications or other libraries may want to use this package. In order to make that possible, we need to update the Python packages set to include this package"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing mypython.nix\n"
     ]
    }
   ],
   "source": [
    "%%file mypython.nix\n",
    "\n",
    "let\n",
    "  nixpkgs = fetchTarball \"channel:nixos-20.03\";\n",
    "  pkgs = import nixpkgs {};\n",
    "\n",
    "  mypython = pkgs.python3.override {\n",
    "    self = mypython;\n",
    "    packageOverrides = pself: psuper: {\n",
    "      toolz = pself.callPackage ./toolz.nix {};\n",
    "    };\n",
    "  };\n",
    "in {\n",
    "  inherit mypython;\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now have a Python interpreter that has a package set that includes our package. Using this type of overriding we can also inject modifications to existing packages that will then be used by all dependents in the set.\n",
    "\n",
    "Let's build the package. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/nix/store/n49f4v316r19b49lq7r9bj28vngg16ps-python3.7-toolz-0.10.0\n"
     ]
    }
   ],
   "source": [
    "! nix-build -A mypython.pkgs.toolz mypython.nix"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The log shows the execution of several hooks that are responsible for building, installing and testing the package."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Environments\n",
    "\n",
    "Now that we know how to build a Python library, we want to use it in an environment, for example a development environment."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The following expression creates a Python environment, quite similar to a `virtualenv` or `venv` that includes the interpreter, our package and another package, the test runner `pytest`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting myenv.nix\n"
     ]
    }
   ],
   "source": [
    "%%file myenv.nix\n",
    "\n",
    "(import ./mypython.nix).mypython.withPackages(ps: with ps; [ toolz pytest ])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[K<module 'toolz' from '/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/lib/python3.7/site-packages/toolz/__init__.py'>\n",
      "<module 'pytest' from '/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/lib/python3.7/site-packages/pytest/__init__.py'>\n"
     ]
    }
   ],
   "source": [
    "! nix run -f myenv.nix --command python3 -c 'import toolz; print(toolz); import pytest; print(pytest)'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `toolz` module, just like the `pytest` module can now be imported."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How does an environment like this look like? If we build the expression we get the link to the store path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/python3\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/pydoc\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/pyvenv\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/easy_install-3.7\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/python3-config\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/.easy_install-3.7-wrapped\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/py.test\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/bin/pyvenv-3.7\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/share\n",
      "/nix/store/dyzd76278jccx0ywmp77cr70s3m73413-python3-3.7.6-env/include\n"
     ]
    }
   ],
   "source": [
    "! find $(nix-build myenv.nix) | tail"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The environment is essentially a bunch of symbolic links to the packages we've included, as well as the interpreter. Executables are also wrapped so that all tools can find each other."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
